//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

using System.Collections.Generic;
using System.Threading.Tasks;
using TodoApi.Interfaces;
using TodoApi.Models;

namespace TodoApi.Services
{
    /// <summary>
    /// Represents a service for interacting with todo items.
    /// </summary>
    public class TodoService : ITodoService
    {
        private readonly ITodoRepository _todoRepository;

        /// <summary>
        /// Initializes a new instance of the <see cref="TodoService"/> class.
        /// </summary>
        /// <param name="todoRepository">The todo repository.</param>
        public TodoService(ITodoRepository todoRepository)
        {
            _todoRepository = todoRepository;
        }

        /// <inheritdoc/>
        public async Task<IEnumerable<TodoItem>> GetTodoItems()
        {
            return await _todoRepository.GetTodoItems();
        }

        /// <inheritdoc/>
        public async Task<TodoItem> GetTodoItem(int id)
        {
            return await _todoRepository.GetTodoItem(id);
        }

        /// <inheritdoc/>
        public async Task AddTodoItem(TodoItem todoItem)
        {
            if (todoItem != null) 
            {
                await _todoRepository.AddTodoItem(todoItem);
            }
        }

        /// <inheritdoc/>
        public async Task UpdateTodoItem(TodoItem todoItem)
        {
            if(todoItem != null)
            {
                await _todoRepository.UpdateTodoItem(todoItem);
            }
        }

        /// <inheritdoc/>
        public async Task DeleteTodoItem(int id)
        {
            if(await this.TodoItemExists(id)) 
            {
                await _todoRepository.DeleteTodoItem(id);
            }
        }

        /// <inheritdoc/>
        public async Task<bool> TodoItemExists(int id)
        {
            return await _todoRepository.TodoItemExists(id);
        }
    }
}
